[
  {
    "id": "COMP8670",
    "name": "Advanced Topics in Logic and Computation",
    "n_units": 6,
    "description": "This broad course covers: essentials of first order logic, up to and including completeness proofs; introductions to proof theory and model theory; elements of modal and temporal logic; introduction to automated reasoning. Students will have the opportunity to read and present material going beyond that in the lectures.",
    "requisites": [
      "To enrol in this course you must be studying Master of Computing or have successfully completed COMP6700 or COMP6710."
    ]
  },
  {
    "id": "ENGN8536",
    "name": "Advanced Topics in Mechatronics Systems",
    "n_units": 6,
    "description": "The course will describe the theory and practice of deep Neural Networks, otherwise known as Deep Learning, with a particular emphasis on their use in Image Processing and Computer Vision.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision."
    ]
  },
  {
    "id": "COMP8650",
    "name": "Advanced Topics in Machine Learning",
    "n_units": 6,
    "description": "This course explores a selected area relevant to statistical machine learning in depth, and will be taught by an SML staff member of internationally recognised standing and research interest in that area. Based on current SML staffing, this will be one of:      \u2022 Kernel methods  \u2022 Graphical models  \u2022 Reinforcement learning  \u2022 Convex analysis  \u2022 Optimisation  \u2022 Bioinformatics  \u2022 Minimal description length principle  \u2022 Topics in information theory  \u2022 Decision theory      Over the past several years the content has alternated between \u201cconvex analysis and optimisation\u201d and \u201cstructured probabilistic models\u201d. Students should contact the course convenor to find out what topic is planned for the coming semester.",
    "requisites": [
      "To enrol in this course you must have completed COMP6670 Introduction to Machine Learning or COMP8600 Statistical Machine Learning. Incompatible with COMP4680."
    ]
  },
  {
    "id": "ENGN8501",
    "name": "Advanced Topics in Computer Vision",
    "n_units": 6,
    "description": "The goal of Computer Vision is to enable the computer or AI agent to \u2018see\u2019 and \u2018understand\u2019 the world like if not better than human beings. To that end, the computer needs to use sensors such as RGB or depth sensors to interact with the world. It mainly includes the understanding of the environment (scene understanding), humans, and further interaction with humans. Mapping to specific computer vision problems, this course will cover advanced topics in computer vision, such as 1) Scene Understanding, 2)Graphical Models, 3)3D visual perception , 4) Human Analysis and modeling. This course will review current research literature in the above fields and update students with state-of-the-art techniques. Students will work on group projects related to concrete research problems and present their research results in the form of seminars.",
    "requisites": [
      "To enroll in this course you must have completed ENGN6528."
    ]
  },
  {
    "id": "COMP6466",
    "name": "Algorithms",
    "n_units": 6,
    "description": "This course provides basic approaches for designing and analysing algorithms and data structures. It will focus on two fundamental problems in computing: Sorting and searching. It will cover various data structures and algorithm design techniques for solving these two classes of problems, as well as basic performance measures and analysis techniques for solving such problems.",
    "requisites": [
      "To enrol in this course you must be studying Master of Computing or have successfully completed COMP6700 or COMP6710. You are not able to enrol in this course if you have successfully completed COMP3600."
    ]
  },
  {
    "id": "COMP6445",
    "name": "Advanced Computing Research Methods",
    "n_units": 6,
    "description": "The course introduces students to some fundamentals of research methodology, and gives students first hand experience by having them carry out a small research project, under close supervision by a member of academic staff. The course comprises a series of lectures which cover the following topics: how to define a research problem; writing a research paper and report; how to give a seminar; the use of search tools and databases to find relevant literature; scientific methods in practice; design of an experiment. Students complete a research project which requires them to carry out background reading and literature review, and to prepare a research report and give a seminar at the end of the course.",
    "requisites": [
      "To enrol in this course you must be enrolled in the Master of Computing (Advanced). Incompatible with COMP4450"
    ]
  },
  {
    "id": "ENGN8224",
    "name": "Advanced Control Systems",
    "n_units": 6,
    "description": "This course introduces students to recently developed and advanced techniques for solving complex control problems. The course presents theory and methodology for analysis and modelling of systems and signals, and methods for design and synthesis of feedback controllers. The emphasis of this course will be on robust control and optimal control of dynamical systems.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Engineering, and have completed ENGN3223 or ENGN6223 or an equivalent course in control systems."
    ]
  },
  {
    "id": "COMP8620",
    "name": "Advanced Topics in Artificial intelligence",
    "n_units": 6,
    "description": "This is an advanced graduate course that covers advanced topics in Artificial Intelligence. Topics vary from one offering to the next and are likely to be drawn from the following list: planning, scheduling, games, search, reasoning (constraint-based, model-based, spatial, temporal), knowledge representation, decision-making under uncertainty, reinforcement learning, agents, foundations.",
    "requisites": [
      "To enrol in this course you must have completed COMP6320; and be studying Master of Computing 7705 or Master of Computing 7706. Incompatible with COMP4620."
    ]
  },
  {
    "id": "CECS8005",
    "name": "Applied Cybernetics Professional Experience",
    "n_units": 0,
    "description": "Applied Cybernetics Professional Experience gives the student exposure to applying approaches and skills learned in CECS6001; CECS6002 and CECS8001 in a professional environment. Students will be embedded within an industry, community, government, start-up or academic organisation as a practitioner of the New Branch of Engineering to contribute to a project related to cyber- physical systems.",
    "requisites": [
      "To enrol in this course you must be enrolled in the Master of Applied Cybernetics."
    ]
  },
  {
    "id": "COMP6720",
    "name": "Art and Interaction Computing",
    "n_units": 6,
    "description": "This course introduces the fundamentals of coding and design required to create expressive interactive artworks. Students will learn how to conceptualise, realise, and evaluate an original interactive artwork using a high-level programming language. They will experiment with computer graphics, sound, and input devices and learn programming concepts required for accomplishing their creative objectives.      The course introduces the creative possibilities presented by the computer in the modern art world, fundamental concepts of visual and interactive design, and recent developments in art and interaction computing. Topics covered include interactive and new media art, interaction design, program organisation, variables, control structures, graphics, and audio.",
    "requisites": [
      "Incompatible with COMP1720"
    ]
  },
  {
    "id": "CECS8001",
    "name": "Building Cyber-Physical Systems",
    "n_units": 12,
    "description": "This is an annual course which enables students to create prototype cyber- physical systems in diverse teams under academic supervision.      This course will create disciplinary experts who have a hands-on understanding of new and emerging technological constellations and their separate components. Participants will complete a range of lab-based projects to develop a technical understanding of systems as designed objects which embody values. They will also gain technical skills in designing, building and understanding such systems, and understanding Cyber Physical Systems (CPS) from the \u2018inside\u2019, with an emphasis on making and building. This complements the approach in CECS6001 and CECS6002, which challenge participants to consider CPSs from the \u2018outside\u2019 via interrogating case studies.      Participants will not emerge from the course as qualified programmers or computer scientists. Instead, through learning-by-doing, participants will gain sufficient knowledge and practice to drive meaningful and accurate conversations and shape design decisions as a part of a multidisciplinary team developing new and emerging technologies.",
    "requisites": [
      "This course is only available to selected students. Students will need to contact CECS Student Services to request a permission code to enrol. Selection is made through a competitive and transparent process, documented in the application pack available at https://3ainstitute.cecs.anu.edu.au/"
    ]
  },
  {
    "id": "COMP8880",
    "name": "Computational Methods for Network Science",
    "n_units": 6,
    "description": "Computational Methods for Network Science covers the essentials of using computational approaches to pose and answer social science research problems. In doing so it also covers a selected set of network algorithms in depth. This includes random graph models, homophily and friendship paradox, influence and contagion in networks, markets and network games, network resilence. Furthermore, it also teaches students about the ethics of doing data-driven social science research.   The course equips the students with in-depth knowledge and hands-on experience in working with network data to study social processes at both the individual and aggregate levels. Graduates will be equipped with the technical, theoretical and conceptual skills and knowledge to start a budding career in this field of research.",
    "requisites": [
      "To enrol in this course you must have completed COMP6670 OR (6 units of (either COMP6710 or COMP6730 or COMP7230) and COMP8410 and STAT6039). Incompatible with COMP4880."
    ]
  },
  {
    "id": "COMP6719",
    "name": "Computer Systems & Organisation",
    "n_units": 6,
    "description": "This course provides a bottom-up overview of a modern computer system. It first unveils the inner workings of a general-purpose microprocessor building up from simple logic circuits. It then demystifies assembly code\u2014the machine language spoken by the processor\u2014and the mapping of assembly programs to higher levels of programming abstraction. With an understanding of how the microprocessor executes programs, the course then shows how a high-level programming language such as C makes those abstractions concrete, and exposes the static and dynamic structures of programs. Students learn the organisation principles of a simple microprocessor, how it can be realised in a simulator, and programmed in assembly. Students also build a non-trivial real-world application in the C programming language.      More specifically, the course covers:    * Introduction to digital systems and logic, including Boolean algebra, logic gates, and combinational logic   * Instruction set architecture (ISA) design principles with a specific focus on the ARM ISA   * Microarchitecture of a simple ARM processor   * Memory and I/O systems   * C programming language, translation of C programs to ARM assembly, and C program runtime organization including call stack and heap   * Basic I/O utilities in C and memory mapped I/O   * Relationship between programming language abstractions and assembly code",
    "requisites": [
      "To enrol in this course you must be studying a Master of Computing or have successfully completed one of: COMP6700 \\- Introductory Programming COMP6710 \\- Structured Programming Incompatible with: ENGN2219 \\- Introduction to Microprocessor Systems COMP2300 \\- Computer Organisation COMP6300 \\- Computer Organisation"
    ]
  },
  {
    "id": "COMP6300",
    "name": "Computer Organisation and Program Execution",
    "n_units": 6,
    "description": "This course lays the foundations for the understanding of CPU architectures, networking and operating systems. Additionally, it introduces topics which cut across many computer systems, such as cross-layer communication and basic concurrency (as well as basic ideas of virtualization and efficiency through proximity).  CPU architectures are discussed from first principles (digital logic) and are expanded into current day designs. This also involves assembler level programming to connect hardware circuits to the world of software. Representations of data types and high-level code at the machine level will be made clear by keeping the relations between high-level and machine-level code throughout the course. It will also look at how concurrent software constructs can or cannot be translated into parallel hardware operations. This course will cover a wide range of topics such as digital logic: transistors, gates, and combinatorial circuits; clocks; registers and register banks; arithmetic- logic units; data representation: big-endian and littleendian integers; ones and twos complement arithmetic; signed and unsigned values; Von-Neumann architecture and bottleneck; instruction sets; RISC and CISC designs; instruction pipelines and stalls; rearranging code; memory and address spaces; physical and virtual memory; interleaving; page tables; memory caches; bus architecture; polling and interrupts; DMA; device programming; assembly language; optimizations; concurrency and parallelism; and data pipelining.  Knowledge of the principles of networking and operating systems (as well as their relation to computer hardware) are essential for every computer scientist and this course will provide those foundations. The relation of assembler level building blocks (macros) to constructs in direct compiled language is demonstrated throughout the course.  While this course provides the above foundations (which stand on their own), it also prepares students for the follow-up course COMP6310 Systems, Networks and Concurrency, which rounds off the knowledge about concurrency in current computer systems of any scale, as well as expands the knowledge in networking and operating systems.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Computing or completed or currently studying COMP6700. Incompatible with COMP2300, ENGN2219 and COMP6719."
    ]
  },
  {
    "id": "COMP6331",
    "name": "Computer Networks",
    "n_units": 6,
    "description": "This course studies the standard models for the layered approach to communication between autonomous machines in a network, and the main characteristics of data transmission across various physical link types. It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications.      Topics include: communication network architectures, signalling and modulation across physical media, real-world local and wide-area networks, internet protocol fundamentals, performance and monitoring of networks, routing, network security, and application protocols for distributed systems including web, email, video, internet-of-everything and other contemporary network topics.",
    "requisites": [
      "To enrol in this course you must have completed COMP6710 or COMP6310 or COMP6442. Incompatible with COMP3310, ENGN3539, ENGN6539."
    ]
  },
  {
    "id": "ENGN6539",
    "name": "Computer Networks",
    "n_units": 6,
    "description": "This course studies the standard models for the layered approach to communication between autonomous machines in a network, and the main characteristics of data transmission across various physical link types. It considers how to design networks and protocols for diverse situations, analyses several application and support protocols from a distributed systems viewpoint, and identifies significant problem areas in networked communications.      Topics include: communication network architectures, signalling and modulation across physical media, real-world local and wide-area networks, internet protocol fundamentals, performance and monitoring of networks, routing, network security, and application protocols for distributed systems including web, email, video, internet-of-everything and other contemporary network topics.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision. Incompatible with ENGN3539, COMP3310 and COMP6331."
    ]
  },
  {
    "id": "COMP6320",
    "name": "Artificial Intelligence",
    "n_units": 6,
    "description": "Artificial intelligence is the science that studies and develops methods of making computers more /intelligent/. The focus of this course is on core AI techniques for search, knowledge representation and reasoning, planning, and designing intelligent agents. The course also aims to give an overview of the historical, philosophical, and logical foundations of AI.",
    "requisites": [
      "To enrol in this course you must have completed COMP6710, and have completed or be currently enrolled in COMP6262. Incompatible with COMP3620."
    ]
  },
  {
    "id": "COMP8830",
    "name": "Computing Internship",
    "n_units": 12,
    "description": "This course will enable computer science students to develop competencies expected of professionals working in business, government or the broader community. A list of available internship opportunities will be maintained for which students can apply. A holistic selection process will be used to select the best applicant for each opportunity. Students can also propose internships, but these will always be established following negotiations between the ANU and the potential host organisations, before being offered to students along with other opportunities.",
    "requisites": [
      "To enrol in this course you must have a minimum ANU GPA of 5.0/7.0, AND \\- be enrolled in the Master of Computing AND have successfully completed COMP8260 and COMP6442, OR \\- be enrolled in the Master of Machine Learning and Computer Vision AND have successfully completed: COMP6710 OR COMP6730, AND COMP6250 OR COMP8260. Incompatible with COMP8715 and COMP8755."
    ]
  },
  {
    "id": "COMP8715",
    "name": "Computing Project",
    "n_units": 6,
    "description": "Students will conduct a project, under supervision, that will act as a capstone to the Master of Computing program, and increase the depth of their knowledge in the computing area. The project will be undertaken in small teams. The activities in the course will normally include some combination of reading, writing, artefact construction and presentation, as appropriate to the project's topic. Application of research methodologies in literature review and evaluation will also be undertaken. Topic-specific learning objectives, project overview and assessment arrangements will be specified at the outset using the Research School of Computer Science form 'Independent Study Contract' where applicable.",
    "requisites": [
      "To enrol in this course you must be enrolled in the Master of Computing; AND have successfully completed COMP8260 and COMP6442. Incompatible with COMP8755 and COMP8830."
    ]
  },
  {
    "id": "COMP8800",
    "name": "Computing Research Project",
    "n_units": 12,
    "description": "This is an annual course (24 units) which requires students to conduct a substantial individual research project under academic supervision, with a formal thesis being submitted and presentation of a seminar.",
    "requisites": [
      "To enrol in this course you must be enrolled in the Master of Computing (Advanced) and have completed COMP6442, COMP8260 and COMP6445. You also need to have a signed 'Independent Study contract' with a supervisor before the start of the semester in which you plan to start your project."
    ]
  },
  {
    "id": "ENGN6528",
    "name": "Computer Vision",
    "n_units": 6,
    "description": "Computer Vision is an important field of Artificial Intelligence concerned with questions such as \"how to extract information from image or video, and how to build a machine to see\". Recent explosive growth of digital imaging technology, advanced computing, and deep learning makes the problems of automated image interpretation even more exciting and much more relevant than ever. This course introduces students to fundamental problems in image processing and computer vision, as well as their state-of-the-art solutions.      Topics covered in detail include: image formation, image filtering, camera geometry, thresholding and image segmentation, edge, point and feature detection, geometric frameworks for vision, single view and two views geometry; 3D visual reconstruction, camera calibration; stereo vision, image classification and object recognition, deep learning and neural networks for computer vision etc. The course features extensive practical components including computer labs and Term Research projects that provide students with the opportunity to practice and refine their skills in image processing and computer vision.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision or Master of Computing or Master of Computing (Advanced)."
    ]
  },
  {
    "id": "ENGN6223",
    "name": "Control Systems",
    "n_units": 6,
    "description": "Control Systems is the study of the analysis and regulation of the output behaviors of dynamical systems subject to input signals. The concepts and tools discussed in this course can be used in a wide spectrum of engineering disciplines such as mechanical, electrical, aerospace, manufacturing, and biomedical engineering. The emphasis of this course will be on the basic theories and feedback controller design methods of linear time-invariant systems.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering."
    ]
  },
  {
    "id": "COMP8430",
    "name": "Data Wrangling",
    "n_units": 6,
    "description": "Real-world data are commonly messy, distributed, and heterogeneous. This course introduces core concepts of data cleaning and standardisation, and data integration, that are aimed at converting and mapping raw data into other formats that allow more efficient and convenient use and analysis of data. The courses also discusses data quality, management, and storage issues as relevant to data analytics.",
    "requisites": [
      "To enrol in this course you must have completed either COMP7230, COMP6730 or COMP6710; AND COMP7240 or COMP6240. Incompatible with COMP3430. A permission code is needed to take this course in intensive mode."
    ]
  },
  {
    "id": "COMP8410",
    "name": "Data Mining",
    "n_units": 6,
    "description": "Massive amounts of data are being collected by public and private organisations, and research projects, while the Internet provides a very large source of information about almost every aspect of human life and society. Analysing such data can provide significant benefits to an organisation. This course provides a practical focus on the technology and research in the area of data mining. It focuses on the algorithms and techniques and less on the mathematical and statistical foundations.",
    "requisites": [
      "To enrol in this course you must have completed COMP7240 or COMP6240 or COMP2400; and COMP6730 or COMP7230 or COMP6710. You are not able to enrol in this course if you completed COMP3420 or COMP3425 or COMP8400"
    ]
  },
  {
    "id": "CECS6002",
    "name": "Cybernetics Practice for Cyber-Physical Systems",
    "n_units": 6,
    "description": "In this course, we will build on the conceptual approach to the new branch of engineering developed in CECS 6001. Students will investigate and analyse cyber-physical systems (CPSs) using cybernetic approaches.      Through the course, we will challenge students to study and analyze various examples of CPSs, employing systems analysis and complementary methodologies to explore concepts of safety, sustainability, responsibility and scale.  By the end of the course, students will be able to critically explore the ways CPSs are planned, designed, built, operated, maintained and regulated, as well as assess how CPSs link to and affect other systems, both physical and non- physical. Students will be able to identify mechanisms that restrict, shape and support CPS systems being deployed at scale.",
    "requisites": [
      "This course is only available to selected students. Students will need to contact CECS Student Services to request a permission code to enrol. Selection is made through a competitive and transparent process, documented in the application pack available at https://3ainstitute.cecs.anu.edu.au/"
    ]
  },
  {
    "id": "ENGN6626",
    "name": "Digital Communications",
    "n_units": 6,
    "description": "This course presents the principles and techniques fundamental to the analysis and design of digital communication systems. It focuses on the basic building blocks of a digital communication system (channel encoder/decoder, digital modulator/demodulator and channel characteristics). The emphasis is on mathematical underpinnings of communications theory along with practical applications. Specific topics include:    * Review of Probability and Random Processes and Modelling of Gaussian noise process.   * Digital Modulation Techniques: Signal space analysis, BPSK, QPSK, QAM.   * Digital Demodulation & Detection Techniques: Correlator-demodulator, Maximum likelihood detection (MLD) in additive white Gaussian noise (AWGN), bit error rate (BER) performance.   * Channel Encoder/Decoder: Linear block codes, Cyclic codes, Convolutional codes, Viterbi algorithm.   * Information Theory and Source Coding: Source Entropy, Huffman Coding, Channel Capacity.   * Advanced topics in digital communications are briefly discussed if time allows. Matlab is used extensively in the analysis and design.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering. Incompatible with ENGN3226."
    ]
  },
  {
    "id": "COMP6490",
    "name": "Document Analysis",
    "n_units": 6,
    "description": "Processing of semi-structured documents such as internet pages, RSS feeds and their accompanying news items, and PDF brochures is considered from the perspective of interpreting the content. This course considers the \\document\" and its various genres as a fundamental object for business, government and community. For this, the course covers four broad areas: (A) information retrieval, (B) natural language processing, (C) machine learning for documents, and (D) relevant tools for the Web. Basic tasks here are covered including content collection and extraction, formal and informal natural language processing, information extraction, information retrieval, classification and analysis. Fundamental probabilistic techniques for performing these tasks, and some common software systems will be covered, though no area will be covered in any depth.",
    "requisites": [
      "You are not able to enrol in this course if you have successfully completed COMP4650."
    ]
  },
  {
    "id": "ENGN6537",
    "name": "Digital Signal Processing",
    "n_units": 6,
    "description": "Digital Signal Processing (DSP) has become over the years an important tool with applications in Electrical and Mechanical Engineering fields. DSP has penetrated many domains of applications, such as digital communications, medical imaging, audio & video systems, consumer electronics, robotics, remote sensing, finance, etc.      The Discrete-Time Signal Processing paradigm is a convenient setting to analyse the basic principles of DSP. At the end of this course, the students should be able to understand these basic principles, and apply fundamental algorithms and methods to analyse and design discrete- time systems for modern DSP applications. Though the course will focus on the study of theoretical concepts, methods and algorithms, the student will be confronted with application and implementation issues, through various examples and assignments requiring personal computer work including processing of real- world signals.",
    "requisites": [
      "Incompatible with ENGN4537"
    ]
  },
  {
    "id": "ENGN6213",
    "name": "Digital Systems and Microprocessors",
    "n_units": 6,
    "description": "This course introduces advanced theoretical and technical knowledge of digital circuits and embedded systems. Digital systems and embedded systems are at the heart of almost all modern mechatronics and electronics technologies, ranging from smartphones to autonomous vehicle technologies. This course will first focus on sequential logic circuits, also called finite-state-machine, by utilising field-programmable-gate-array boards and a hardware-description language. The second focus will be on embedded system design using a microprocessor and programming. Through the term projects, students will design working embedded systems, then critically analyse and evaluate the erformance of the systems. The course will also develop advanced cognitive, technical and communication skills to solve complex design problems.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering. Incompatible with ENGN3213."
    ]
  },
  {
    "id": "ENGN8535",
    "name": "Engineering Data Analytics",
    "n_units": 6,
    "description": "Data-driven decision-making is an essential component of emerging engineering systems that generate and consume very large amounts of sensing data from autonomous vehicles to digital pathology. This course covers technologies and methodologies necessary for inferring useful information and identifying underlying patterns from often raw, incomplete, noisy and corrupted data that is present in real-life applications. It will also give students the opportunity to explore advanced solutions of data analytics such as dimensionality reduction, sparse encoding, compressive sensing, nonlinear filtering, manifold learning, and generative data modelling.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision."
    ]
  },
  {
    "id": "ENGN6200",
    "name": "Engineering Internship",
    "n_units": 6,
    "description": "The aim of this course is to use the internship experience to enable students to develop their engineering skills and practice. Invited Students will be placed in industry and assessed for academic credit. The internships will be aligned with the aims of the engineering program and its areas of specialisation. Students will experience a real-life engineering workplace and understand how their engineering and professional skills and knowledge can be utilised in industry. They will also be able to demonstrate functioning engineering knowledge, both new and existing, and identify areas of further development for their future careers.",
    "requisites": [
      "Permission to enrol must be obtained from the student's program convenor and the ENGN6200 course convenor. Students must have completed a minimum of 48 units of postgraduate coursework, including ENGN6250 or ENGN8260."
    ]
  },
  {
    "id": "ENGN6601",
    "name": "Engineering Materials",
    "n_units": 6,
    "description": "This subject develops a knowledge of the variety, properties and characteristics of engineering materials. Equilibrium phase diagrams and kinetic TTT diagrams for predicting microstructure in materials. Properties of alloys (steels, aluminium, magnesium, titanium, and other non-ferrous metals). Ceramic materials: ceramics and glasses; forming of ceramics; structure and defects in ceramics. Characterisation, structure and properties of polymers; polymer processing. Rubber elasticity. Fibre and metal reinforced advanced composite materials. Strengthening and toughening mechanisms for materials. Fracture mechanics. Characterisation methods (mechanical and microstructural). Biomaterials and nano-materials.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering. Incompatible with ENGN3601."
    ]
  },
  {
    "id": "ENGN6516",
    "name": "Energy Resources and Renewable Technologies",
    "n_units": 6,
    "description": "Providing energy for the entire planet without causing catastrophic climate change requires profound Energy Change. Major developments are occurring in the energy sector, both with energy technologies and the economic, social and policy measures that accompany them. This course focuses on renewable energy resources \u2013 the technologies that will comprise a large part of global Energy Change. It aims to help students identify the major \u2018big picture\u2019 questions in the area of energy resources and develop technically sound ways of quantitatively answering them.      The course commences with an overview of world energy resources, the scientific evidence for climate change, and an introduction to asking good questions - with a focus on ball-park analysis and appropriate physical units.      We next look at individual energy resources in detail (solar PV, nuclear, wind, solar thermal, hydro, bio, geothermal and tidal). We examine their scientific and technical foundations, available resources, integration with the grid, and broader economic and social issues to assess their ultimate potential as well as their practical limitations. Alongside the technical assessment of energy resources, we dedicated individual lectures to calculating the levelized cost of electricity, understanding the current and future electrical grid, and examining broader social and political issues concerned with energy use. Because of the rapid pace of change in this field, the course focuses on developing students\u2019 skills in framing questions and finding answers, as well as being able to critically evaluate those answers and support them with scientific evidence.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Engineering or Master of Energy Change or Master of Energy Change (Research). Incompatible with ENGN3516."
    ]
  },
  {
    "id": "ENGN6410",
    "name": "Engineering Sustainable Systems",
    "n_units": 6,
    "description": "The increasing need for engineers to address sustainability will add significant complexity to their tasks. They will therefore need the skills and knowledge to understand and predict the impact of their practice. This course will focus on the dynamics of complex systems in the context of the environmental and social impacts of technological innovation. Students will develop knowledge and skills that provide a basis for the design and sustainable operation of engineering-environment-social systems that are highly non-linear. Sustainability will be defined in engineering terms, and the basic dynamical principles will be explored in tutorial discussions. The course will be presented using a 'problem based learning' mode of delivery.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Engineering or Master of Energy Change or Master of Energy Change (Research). Incompatible with ENGN3410."
    ]
  },
  {
    "id": "ENGN6224",
    "name": "Fluid Mechanics and Heat Transfer",
    "n_units": 6,
    "description": "This course explores the fundamental concepts of fluid mechanics and heat transfer, and their applications in engineering. The course begins by introducing analysis of static fluid bodies and then continues with fluid dynamics, principally the effects of viscous and thermal boundary layers. Fluid conservation equations are presented in detail. Fluid conveyancing through pipework and external flow analysis complete the coursework on fluids. The concept of boundary layer behaviour is then extended to heat transfer. Conduction, convection are treated at a fundamental level, leading to analysis and design of heat exchangers. Finally, radiation heat transfer is presented in a wider context.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Engineering or Master of Energy Change or Master of Energy Change (Research). Incompatible with ENGN3224."
    ]
  },
  {
    "id": "CECS6001",
    "name": "Framing Questions about Cyber-physical Systems",
    "n_units": 6,
    "description": "In this course we will start to create practitioners of the new branch of engineering who can carefully examine new and emerging technological systems, the building blocks they are made from, and the questions they raise for human society and our ecosystems.      Through the course, we will challenge students to take different approaches to studying and understanding cyber-physical systems (CPS): systems with human, technological, and environmental components. These approaches do not start with identifying and solving problems, but instead start with framing questions about these systems, their building blocks and the dynamic relationships between their human, technological, and environmental components. Students will learn to engage with important terminology and detail, integrate multiple perspectives, question assumptions, and think critically and creatively in order to start with framing questions about emerging cyber-physical systems and the future we want to collectively create with them.      This course gives students exposure to conceptual approaches of the new branch of engineering. It draws on cybernetics, systems and control theory, design thinking and practice, scientific method, social science, humanities, and critical theory. It serves as a foundation for applying the new branch of engineering\u2019s approach to cyber-physical systems analysis in Semester 2.",
    "requisites": [
      "This course is only available to selected students. Students will need to contact CECS Student Services to request a permission code to enrol. Selection is made through a competitive and transparent process, documented in the application pack available at https://3ainstitute.cecs.anu.edu.au/"
    ]
  },
  {
    "id": "COMP6260",
    "name": "Foundations of Computing",
    "n_units": 6,
    "description": "This course presents some formal notations that are commonly used for the description of computation and of computing systems, for the specification of software and for mathematically rigorous arguments about program properties. The following areas of study constitute the backbone of the course. Predicate calculus and natural deduction, inductive definitions of data types as a basis for recursive functions and structural induction, formal language theory (particularly regular expressions, finite state machines and context free grammars), and specification languages.",
    "requisites": [
      "Incompatible with COMP1600"
    ]
  },
  {
    "id": "COMP6464",
    "name": "High Performance Scientific Computing",
    "n_units": 6,
    "description": "This course provides an introduction to High Performance Computing with an orientation towards applications in science and engineering. Aspects of numerical computing and the design and construction of sophisticated scientific software will be considered. The focus will be on the C and C++ programming languages, although reflecting the reality of modern scientific computation this course will also touch on other languages such as Python, Java and FORTRAN95. The course will study high performance computer architectures, including modern parallel processors, and will describe how an algorithm interacts with these architectures. It will also look at practical methods of estimating and measuring algorithm/architecture performance.     The following topics will be addressed: the C++ programming language; basic numerical computing from aspects of floating point error analysis to algorithms for solving differential equations; the engineering of scientific software; general high performance computing concepts and architectural principles; modern scalar architectures and their memory structure; performance and programmability issues, and program analysis techniques for high performance computing; parallel computing paradigms and programming using the OpenMP standard; trends in HPC systems.",
    "requisites": [
      "To enrol in this course you must be studying Master of Computing or have successfully completed COMP6700 or COMP6710."
    ]
  },
  {
    "id": "ENGN8170",
    "name": "Group Project",
    "n_units": 12,
    "description": "This course is designed to offer students an opportunity to collaborate with peers in a small-group setting and tackle a real-world engineering problem under the direction of an external project client. Project teams receive a client-drafted problem statement, which calls for engineering expertise. From this problem statement, the students are responsible for developing a full set of requirements and key performance indicators to guide their proposed solution. Using a systems engineering framework and working with a high degree of autonomy, the students then proceed through a systems design process including conceptual design, sub-system requirements, and trade-off analyses. Finally, they develop and implement their engineered solution, and evaluate it against the agreed performance indicators. At the end of the project, clients take delivery\u2014and participate in the evaluation\u2014of their team's output. The course emphasises value-driven work, as evaluated in terms of: effective teamwork and peer support; impactful communication (formal and informal, written and oral); insightful personal and professional development; and elegance of engineered solutions.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Engineering and have completed ENGN8100 and (ENGN8160 or ENGN8260)."
    ]
  },
  {
    "id": "COMP6390",
    "name": "Human-Computer Interaction",
    "n_units": 6,
    "description": "This course will provide an introduction to the field of Human-Computer Interaction and will introduce students to key interaction and experience design paradigms, approaches, and methods. The course will equip students with theory, methods, and techniques to investigate different design situations, develop novel design ideas, and ask critical questions about the role of technology in society.",
    "requisites": [
      "To enrol in this course you must be studying Master of Computing or have completed COMP6442. Incompatible with COMP3900."
    ]
  },
  {
    "id": "COMP6261",
    "name": "Information Theory",
    "n_units": 6,
    "description": "Information theory studies the fundamental limits of the representation and transmission of information. This course provides an introduction to information theory, studying fundamental concepts such as probability, information, and entropy and examining their applications in the areas of data compression, coding, communications, pattern recognition and probabilistic inference.",
    "requisites": [
      "You cannot enrol in this course if you have completed COMP2610 or ENGN8534."
    ]
  },
  {
    "id": "COMP8755",
    "name": "Individual Computing Project",
    "n_units": 6,
    "description": "This 12 unit course acts as a capstone to the Master of Computing and requires students to complete a practical project on an appropriate computing topic. They will be expected to carry out some combination of reading, writing, artefact construction and presentation whilst working under supervision. The nature of the project can be theoretic, experimental, design or development based on the interests of available supervisors and the student.",
    "requisites": [
      "To enrol in this course you must: \\- be enrolled in the Master of Computing \\- have completed COMP8260 and COMP6442 \\- find a project/supervisor; and \\- have an approved 'Independent Study Contract' Incompatible with COMP8715 and COMP8830."
    ]
  },
  {
    "id": "COMP6670",
    "name": "Introduction to Machine Learning",
    "n_units": 6,
    "description": "Essential foundations for any machine learning application are a basic statistical analysis of the data to be processed, a solid understanding of the mathematical foundations underpinning machine learning as well as the basic classes of learning/adaptation concepts. Those foundations are bundled in this single, introductory course to machine learning in preparation for deeper explorations into the topic, but also as a standalone unit.",
    "requisites": [
      "To enrol in this course you must have completed or be currently enrolled in COMP6710 OR COMP6730. Incompatible with COMP3670."
    ]
  },
  {
    "id": "COMP6420",
    "name": "Introduction to Data Management, Analysis and Security",
    "n_units": 6,
    "description": "Commerce and research are being transformed by data-driven discovery and prediction. Skills required for data analytics at massive levels - scalable data management on and off the cloud, parallel algorithms, statistical modeling, and proficiency with a complex ecosystem of tools and platforms - span a variety of disciplines and are not easy to obtain through conventional curricula. Tour the basic techniques of data science, including both SQL and NoSQL solutions for massive data management, basic statistical modeling (e.g., descriptive statistics, linear and non-linear regression), algorithms for machine learning and optimization, and fundamentals of knowledge representation and search. Learn key concepts in security and the use of cryptographic techniques in securing data.",
    "requisites": [
      "To enrol in this course you must have successfully completed COMP6710. You are not able to enrol in this course if you have previously completed COMP2420. Students enrolled in the Master of Cyber Security, Strategy & Risk Management must contact CECS Student Services to request a permission code for the course."
    ]
  },
  {
    "id": "ENGN8100",
    "name": "Introduction to Systems Engineering",
    "n_units": 6,
    "description": "This course provides an introduction to systems engineering fundamentals, establishing a robust framework for designing complex engineered systems in response to customer needs and expectations. The emphasis of the course is on the core activities of systems engineering, which are requirements analysis; functional analysis and allocation; and design synthesis, test and evaluation. Together, these activities and concerns form what is called the systems engineering process, which provides a comprehensive, life-cycle balanced approach to the design of complex systems that satisfy customer expectations and public acceptability. The course covers lifecycle concerns such as reliability, maintainability and human factors.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering, Master of Project Management, Master of Business Information Systems or Graduate Certificate in Nuclear Technology and Regulation."
    ]
  },
  {
    "id": "COMP8110",
    "name": "Managing Software Projects in a System Context",
    "n_units": 6,
    "description": "This course aims to provide students with sufficient knowledge of the basic principles of software project management that they may support a project manager to carry out the project administrative functions of a program office, lead and manage an agile project development team, and understand the context in which project management is conducted. Many of the skills gained are of use outside formal project management environments.  Key topics:    * Leadership, Management, Professionalism, Ethics and Teamwork    * Communication    * Project Context    * Project Management Body of Knowledge (PMBoK)    * Agile Project Planning    * Agile Project Management    * Project Scope Management    * Quality & Risk Management    * Project Control and Governance",
    "requisites": [
      "To enrol in this course you must be studying a Master of Computing and have completed either COMP6700 or COMP6710. You cannot enrol in this course if you've completed COMP3120."
    ]
  },
  {
    "id": "COMP6340",
    "name": "Networked Information Systems",
    "n_units": 6,
    "description": "Data communications and computer networking systems are growing rapidly in both size and function. It is impossible to think of a successful business day without the Internet. Modern communication technologies such as WiFi, _Bring Your Own Device_ (BYOD), and _Internet of Things_ (IoT) help us to stay connected with our family, friends, and work regardless of present location.      _Networked Information Systems_ (NISs) are becoming an essential part of everyday experiences, in our kitchen appliances, cars, and public transport and for Internet banking and shopping. Because they can make or break a day, understanding how networks work, and how they should be set up and managed to for reliability, scalability, mobility, and security is of the utmost importance to us.      In this course, you will learn fundamental concepts of data communication and networking in addition to gaining a working knowledge of network scalability, mobility, security, and managing capabilities. You will have the foundational basis to understand, evaluate, and compare new technologies and their applications. You will also develop a working knowledge of measuring risks and security threats and considering network monitoring and management procedures. Finally, you will build an ethics awareness and the communication skills needed to apply these networking concepts to a range of real-life analytical scenarios.",
    "requisites": [
      "You are not able to enrol in this course if you have previously completed COMP2410. Students enrolled in the Master of Cyber Security, Strategy & Risk Management must contact CECS Student Services to request a permission code for the course."
    ]
  },
  {
    "id": "COMP6330",
    "name": "Operating Systems Implementation",
    "n_units": 6,
    "description": "This course takes a detailed look at the services provided by, and the internals of, an existing operating system to see how each part is constructed and integrated into the whole. The lectures will also address recent literature describing advances in operating systems. The following topics are addressed: system programming and its facilities (including I/O, signals, job control, interprocess communication, sockets, transport layers, remote operations), system calls and their relation to the system libraries, process management and coordination, implementation of message passing, memory management, interrupt handling, real-time clocks, device-independent input/output, serial-line drivers, network communication, disk drivers, deadlock avoidance, scheduling paradigms, file systems, security.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Computing or be enrolled in or completed COMP6300. Incompatible with COMP3300."
    ]
  },
  {
    "id": "COMP8691",
    "name": "Optimisation",
    "n_units": 6,
    "description": "This course provides foundations and plenty of exercises in practical optimisation problems, while covering all basic elements of optimisation including forms of constraint programming as well as variations on linear programming and convex optimisation.",
    "requisites": [
      "To enrol in this course you must have completed COMP6320. Incompatible with COMP4691."
    ]
  },
  {
    "id": "ENGN6625",
    "name": "Power Systems and Power Electronics",
    "n_units": 6,
    "description": "Power systems and power electronics devices are fundamental to the transmission, transformation and use of electrical energy that underpins much of modern society. This course provides a detailed introduction to the theoretical principles and operating characteristics of power systems, electric machines, and electrical energy conversion. By combining several topics that are often covered by separate electrical engineering courses, students will gain an integrated understanding and advanced technical knowledge of the power systems and power electronics fields. Theoretical material will be supplemented with software and hardware labs to provide students with the practical skills and knowledge to model, analyse and design various power systems and power electronic components. Students will also have the opportunity to explore emerging challenges or new technologies through an independent research activity on a topic of their choice.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering. Incompatible with ENGN4625."
    ]
  },
  {
    "id": "ENGN6524",
    "name": "Photovoltaic Technologies",
    "n_units": 6,
    "description": "Photovoltaic electric systems have become an important area of engineering and are expected to become a mainstream source of energy in the near future. They are an example of interdisciplinary systems engineering, where basic electronic materials science is combined with power electronics, mechanical design, control systems and economic optimisation. The course will give an overview of the solar energy resource and photovoltaic approaches to conversion to electricity in detail. The physics and fabrication of silicon solar cells, including a discussion of the trade-offs between cost, fabrication complexity and performance will be presented. Economic, technical and societal issues that must be considered and dealt with in the design of Photovoltaic systems will be covered. Computer modelling of photovoltaic systems will be used to reinforce understanding and acquire a familiarity with engineering tools for PV system design.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Energy Change or Master of Climate Change. Incompatible with ENGN4524."
    ]
  },
  {
    "id": "COMP6361",
    "name": "Principles of Programming Languages",
    "n_units": 6,
    "description": "\u201cProgramming languages are the medium through which we describe computations. More specifically, we use the model provided by a programming language to discuss concepts, formulate algorithms, and reason about problem solutions. Programming languages define models tailored to thinking about and solving problems in intended application areas. For example, the C language provides a model close to a computer\u2019s underlying hardware [\u2026]. The languages used in practice change continuously as advances in our field and the broadening uses of technology change how we model and express computation. At its core, the study of programming languages examines the principles and limitations of computing (or programming) models, the effective design and use of systems or languages based on these models, and methods to compare their relative strengths and weaknesses in particular contexts.\u201d [Why Undergraduates Should Learn the Principles of Programming Languages, ACM SIGPLAN Education Board, February 6, 2011, Page 1]      This course is an introduction to the theory and design of programming languages. To develop high-assurance software - software for which we can give strong evidence that the software will do what it is supposed to do and nothing more - a formal description of the 'meaning' and behaviour of programs is required. Hence two fundamental aspects of the study of programming languages are their syntax, and their formal semantics. High-assurance software is not only needed for safety-critical software, but also for program transformations, such as carried out by optimising compilers.      Topics covered in this course include formal semantics of programming languages (such as operational, denotational and axiomatic), type systems, higher-order functions and lambda calculus, concurrency, and communication.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Computing. Incompatible with COMP3610."
    ]
  },
  {
    "id": "ENGN8538",
    "name": "Probability and Stochastic Processes in Engineering",
    "n_units": 6,
    "description": "The objective of ENGN8538 is to provide the fundamentals and advanced concepts of probability theory and random process to support graduate coursework and research in electrical, electronic and computer engineering. The required mathematical foundations will be studied at a fairly rigorous level and the applications of the probability theory and random processes to engineering problems will be emphasised. The simulation techniques will also be studied and MATLAB will be used as a software tool for bridging the probability theory and engineering applications.  Topics include:  \u2022 Overview of elementary probability;  \u2022 Discrete and continuous random variables and their statistical properties;  \u2022 Important random variables and their applications;  \u2022 Functions of random variables;  \u2022 Statistical properties of multiple random variables;  \u2022 Random processes: Classification and characterisation;  \u2022 Properties of random processes: Stationarity, correlation function, power spectral density, spectral analysis;  \u2022 Special processes: such as Gaussian and Poisson;  \u2022 Overview of Markov process and applications;  \u2022 Estimation theory, MMSE estimation, performance comparison of estimators;  \u2022 Overview of detection theory;  \u2022 Simulation techniques: generation of random variable/process in MATLAB;  \u2022 Examples of applications from signal processing (e.g., Wiener filter), digital communications (e.g., analysis and simulation of coded digital communication system) and mechatronic systems (e.g. estimation in simultaneous localisation and mapping).",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering."
    ]
  },
  {
    "id": "COMP8260",
    "name": "Professional Practice 2",
    "n_units": 6,
    "description": "This is the second in a series of two courses for engineering and computing graduate students that focus on developing professional and communication skills for the 21st century workplace.      The course builds upon individual capacity, and further develops students\u2019 professional skills, values, and attributes in ways that directly complement their technical expertise. These skills will enable students to perform effectively in the complex context in which engineering and computer professionals operate. In particular, the course will provide students with skills to interpret, critically evaluate, and justify their own and others\u2019 decisions with reference to ethical and professional standards and expectations. The practical focus on these skills and their integration into the engineering and computing curriculum reflects the contemporary expectations of professional organisations (e.g. Engineers Australia and the Australian Computer Society) and enhances the employment opportunities of graduates.",
    "requisites": [
      "To enrol in this course you must have either: completed COMP6250 (Professional Practice 1) and be enrolled in the Master of Computing; OR be enrolled in the Master of Computing (Advanced)."
    ]
  },
  {
    "id": "COMP6250",
    "name": "Professional Practice 1",
    "n_units": 6,
    "description": "This is the first in a series of two courses for engineering and computing graduate students that focus on developing professional and communication skills for the 21st century workplace. Industry bodies and employers of engineering and computing graduates consistently rank communication skills as one of the most important selection criteria when hiring.      This course aims to heighten students\u2019 awareness of professional practice, and to develop new interpersonal and communication skills, leading to students becoming more competent professionals in their field.   Based on Engineers Australia and Australian Computer Society professional competencies, students will develop and practice fundamental skills required by industry to better equip them for the workforce.",
    "requisites": [
      "To enrol in this course you must be enrolled in the Graduate Diploma of Computing or the Master of Computing programs."
    ]
  },
  {
    "id": "COMP6240",
    "name": "Relational Databases",
    "n_units": 6,
    "description": "This course is an introduction to relational databases and the general skills for designing and using them. The topics include the relational data model, SQL, entity-relationship model,functional dependencies,(de-)normalisation, relational algebra, query processing and optimisation, database transactions and security. To deepen the understanding of relational databases, the current industry development of database systems such as NoSQL databases will be introduced at the end of this course.",
    "requisites": [
      "You are not able to enrol in this course if you have successfully completed COMP2400. Incompatible with COMP7240."
    ]
  },
  {
    "id": "ENGN8260",
    "name": "Professional Practice 2",
    "n_units": 6,
    "description": "This is the second in a series of two courses for engineering and computing graduate students that focus on developing professional and communication skills for the 21st century workplace.      The course builds upon individual capacity, and further develops students\u2019 professional skills, values, and attributes in ways that directly complement their technical expertise. These skills will enable students to perform effectively in the complex context in which engineering and computer professionals operate. In particular, the course will provide students with skills to interpret, critically evaluate, and justify their own and others\u2019 decisions with reference to ethical and professional standards and expectations. The practical focus on these skills and their integration into the engineering and computing curriculum reflects the contemporary expectations of professional organisations (e.g. Engineers Australia and the Australian Computer Society) and enhances the employment opportunities of graduates.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision."
    ]
  },
  {
    "id": "COMP6730",
    "name": "Programming for Scientists",
    "n_units": 6,
    "description": "This course teaches introductory programming within a problem solving framework applicable to the sciences. The course emphasizes technical programming, the simulation of scientific systems and the processing of scientific data. There is an emphasis on designing and writing correct code. Testing and debugging are seen as integral to the programming enterprise. Both top-down and object oriented design are taught. There will be an introduction to widely-used computer science algorithms and to machine architecture. The course will be taught using one or more programming languages which are widely applicable to scientific work.",
    "requisites": [
      "You are not able to enrol in this course if you have previously completed COMP1730. Incompatible with COMP7230 and COMP1040."
    ]
  },
  {
    "id": "CECS8002",
    "name": "Projects in Applied Cybernetics",
    "n_units": 6,
    "description": "Within this course, projects and special topics may be offered that vary from year to year. This course will enable students to develop competencies expected of professionals working in business, government academia or the broader community. There may be internship opportunities available for which students can apply. A holistic selection process will be used to select the best applicant for each opportunity. Students can also propose internships or research projects, but these will always be established following negotiations between the ANU and the potential host organisations or project sponsors, before being offered to students along with other opportunities.",
    "requisites": [
      "To enrol in this course you must be enrolled in the Masters of Applied Cybernetics program and have successfully completed CECS6001."
    ]
  },
  {
    "id": "ENGN6250",
    "name": "Professional Practice 1",
    "n_units": 6,
    "description": "This is the first in a series of two courses for engineering and computing graduate students that focus on developing professional and communication skills for the 21st century workplace. Industry bodies and employers of engineering and computing graduates consistently rank communication skills as one of the most important selection criteria when hiring.      This course aims to heighten students\u2019 awareness of professional practice, and to develop new interpersonal and communication skills, leading to students becoming more competent professionals in their field.   Based on Engineers Australia and Australian Computer Society professional competencies, students will develop and practice fundamental skills required by industry to better equip them for the workforce.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision."
    ]
  },
  {
    "id": "ENGN6627",
    "name": "Robotics",
    "n_units": 6,
    "description": "This course provides an introduction to modern robotics. The focus is on robot kinematics, sensing techniques, localization, navigation, mapping and planning. Topics to be covered include robot spatial configuration, homogeneous coordinate transformation, mobile robot locomotion, mobile robot kinematics, robot motion control, sensors and perception, navigation and path planning, robot localization, simultaneous localization and mapping SLAM, robotic system architecture.      The applied component of the course includes experimental work with a programmable mobile robotic platform equipped with sensors. The project aims at integrating sensor measurements to build a representation of the environment and perform a robotic task.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering or Master of Machine Learning and Computer Vision. Incompatible with ENGN4627."
    ]
  },
  {
    "id": "ENGN8601",
    "name": "Research Project",
    "n_units": 6,
    "description": "This is a flexible 6-24 unit course that allows students to undertake a substantial research project on an appropriate engineering topic. Students will be expected to carry out independent research on this topic whilst working under a supervisor who is affiliated with the College of Engineering and Computer Science. The nature of the project can be theoretical, experimental, design or development based on the interests of the student and the availability of supervisors.      Please note this course is not available for general enrolment. Students must obtain permission from the Master of Engineering or Master of Machine Learning and Computer Visions program convenor; the course convener, and secure the support of a supervisor before enrolling in this course.",
    "requisites": [
      "Enrolment in Program 7708"
    ]
  },
  {
    "id": "COMP8600",
    "name": "Statistical Machine Learning",
    "n_units": 6,
    "description": "This course provides a broad but thorough introduction to the methods and practice of statistical machine learning. Topics covered will include Bayesian inference and maximum likelihood modelling; regression, classification, density estimation, clustering, principal and independent component analysis; parametric, semi-parametric, and non-parametric models; basis functions, neural networks, kernel methods, and graphical models; deterministic and stochastic optimisation; overfitting, regularisation, and validation.",
    "requisites": [
      "To enrol in this course you must have completed COMP6670 OR (6 units of (either COMP6710 or COMP6730 or COMP7230) and COMP8410 and STAT6039). Incompatible with COMP4670."
    ]
  },
  {
    "id": "COMP6120",
    "name": "Software Engineering",
    "n_units": 6,
    "description": "Real-world software development is a complex and dynamic activity involving people, technology and processes interacting within a complex environment of clients, users and other stakeholders while being observant of technological, physical, social, legal, and ethical constraints.  This course will empower students with the ability and confidence necessary to exercise critical thinking and professional judgment to select and apply appropriate knowledge, practices and tools to the development of non-trivial software systems. This will be achieved by introducing students to important design methodologies. We will build on previous programming courses to deepen and broaden students' knowledge and understanding of the practices and tools used to build large software systems within complex environments. We will use real-world examples such as distributed, high-integrity, web-based systems where rigorous software engineering can demonstrably enhance business value.  Students will learn how practices and tools can be adapted to suit specific project needs and contexts. Knowledge, practices and tools considered in this course will include process models, requirements engineering, design, modelling and user experience.  Software engineering design methodologies evolve over time. In this course, students will study the details of one or more design methodologies and critically assess their applicability to modern software systems.",
    "requisites": [
      "To enrol in this course you must have successfully completed or be currently studying COMP6442. Incompatible with COMP2120, COMP2130 and COMP6311."
    ]
  },
  {
    "id": "COMP6442",
    "name": "Software Construction",
    "n_units": 6,
    "description": "This course focuses on construction of medium scale programs, using design patterns and tools that are used in the software development process. Students will gain further experience with industry standard revision control and integrated development environment (IDE) tools.   Students will learn appropriate application of programming abstractions they have learned in previous courses to the structuring of medium scale software: inheritance, generic types, polymorphism, procedural abstraction, and abstract recursive data structures (including abstract syntax trees as a program representation, and tools that manipulate them).   The course also covers more advanced data structures, such as priority queues, B-trees, red-black trees, and AVL trees, and deepens understanding of appropriate algorithmic strategies.   The course also treats intellectual property considerations in software development and deployment.",
    "requisites": [
      "To enrol in this course you must have either completed COMP6700 or COMP6710; and completed or currently be enrolled in MATH6005 or COMP6260; OR be enrolled in Master of Computing (Advanced). Incompatible with COMP2100."
    ]
  },
  {
    "id": "COMP6710",
    "name": "Structured Programming",
    "n_units": 6,
    "description": "This course introduces students to the fundamentals of software development with a substantial group software project at its center. Major foci are data structures, object oriented programming, and an introduction to software engineering. Students will extend their understanding of software productivity tools, using revision control for group work, and be introduced to test-driven development as an integral part of software construction.  Students will be introduced to an industrial strength object oriented programming language, extending their understanding of the imperative programming paradigm with a solid grounding in object oriented programming. Inheritance, polymorphism, and parametric types are taught, as well as concepts such as boxing and auto boxing. The important role of standard libraries and their collection types will be emphasized. GUI programming will be introduced.  The course includes a deeper treatment of data structures, using hash tables, trees and lists, which are used to provide concrete implementations of abstract library collection types. The theory of data structures and their time and space complexity will thus be tied to the practice of using standard collections such as those offered by object oriented languages.  The foundations of software engineering including: major development paradigms (such as big plan up front, agile, and formal methods) and risk are introduced.",
    "requisites": [
      "You are not able to enrol in this course if you have previously completed COMP6700 or COMP1110 or if you are enrolled in the Master of Computing (Advanced)."
    ]
  },
  {
    "id": "ENGN6331",
    "name": "Systems Dynamics",
    "n_units": 6,
    "description": "System dynamics is the study of the response of engineering systems with changing time. The concepts learned in this unit can be used in a number of engineering disciplines including mechatronics, and in particular robotics, mechanical, electrical, aerospace and marine engineering, manufacturing and biomedical engineering. The emphasis of this course will be on the analytical and numerical tools of multi-particle systems, rigid body dynamics, electromechanical systems, and complex network dynamics. The topics covered include direct (Newton-Euler) and indirect (Euler-Lagrange) methods for modelling and analysing kinematics and dynamics problems from various examples using differential equations, numerical approximation of linear or nonlinear dynamical equations, and graphical representation and analysis of complex network dynamics.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering."
    ]
  },
  {
    "id": "ENGN8120",
    "name": "Systems Modelling",
    "n_units": 6,
    "description": "This course introduces a broad range of non-trivial techniques and approaches for modelling and simulation of dynamic engineering systems. Techniques include discrete event models; first- and second-order system models; time, frequency and state space relations; and feedback systems. These concepts are introduced through the modelling of electrical systems, mechanical systems, energy systems, control systems etc. Modelling software such as EXTENDSIM, Matlab and Simulink will be key tools in this course.",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering."
    ]
  },
  {
    "id": "COMP6310",
    "name": "Systems, Networks and Concurrency",
    "n_units": 6,
    "description": "This course is based on the foundations set by the previous course on computer organisation. It expands particularly into all forms of concurrent programming including aspects of massively parallel programming.  This course introduces all basic mechanisms to analyse, design, and manage concurrent, single computer-node (multicore) as well as distributed applications (e.g. as performance or dependability enhancements).  Following on from the previous course, the fields of operating systems and networking will also be expanded on. On the operating system side aspects of security, scheduling algorithms and memory management are discussed. More specific networking aspects follow on from message passing as a core concurrency construct. These include the basics of routing and dependable protocols.",
    "requisites": [
      "To enrol in this course you must have completed (COMP6300 or exemption) and (COMP6700 or COMP6710 or exemption). You will not be able to enrol in the course if you have completed COMP2310."
    ]
  },
  {
    "id": "COMP6780",
    "name": "Web Development and Design",
    "n_units": 6,
    "description": "This course introduces the construction of web sites and web interface/interaction design. There is a key focus on the on new media / multimedia and its delivery on the world wide web. The course introduces multimedia as a combination of text, graphics, video, animation and sound for the purposes of information access, storage and dissemination. Topics such as the nature and types of multimedia objects, components of a multimedia system, Web authoring, delivery tools, multimedia applications, spam, podcasts, RSS, web spam and societal implications of the web. Students will create multimedia applications using some or all of HTML, XHTML, JavaScript, animation, sound, video and 3D. The course provides an introduction to the latest web technologies.",
    "requisites": [
      "Incompatible with COMP1710"
    ]
  },
  {
    "id": "ENGN6548",
    "name": "Wind Energy",
    "n_units": 6,
    "description": "The Wind Energy course covers the full spectrum of wind energy from the underlying physics of wind and wind generation technologies, to practical issues including site prospecting, project financing, regulation and societal aspects. The course is delivered in collaboration between ANU Energy academics and Windlab, a Canberra-based innovative wind energy company that was a winning bidder in the 2015 ACT Government 200MW Wind Energy Reverse Auction. In addition to meeting the demand for up-to date, structured knowledge in Wind Energy, the course cements scientific collaboration between ANU and Windlab, and opens up prospects for students to undertake research internships with Windlab as part of their degree.",
    "requisites": [
      "Incompatible with ENGN4548."
    ]
  },
  {
    "id": "COMP6363",
    "name": "Theory of Computation",
    "n_units": 6,
    "description": "This course covers the theoretical computer science areas of formal languages and automata, computability and complexity. Topics covered include: regular and context-free languages; finite automata and pushdown automata; Turing machines; Church's thesis; computability - halting problem, solvable and unsolvable problems; space and time complexity; classes P, NP and PSPACE; NP- Completeness.",
    "requisites": [
      "To enrol in this course you must be studying a Master of Computing. Incompatible with COMP3630."
    ]
  },
  {
    "id": "ENGN6536",
    "name": "Wireless Communications",
    "n_units": 6,
    "description": "This course provides a comprehensive overview and advanced knowledge of modern mobile and wireless communication systems. Building on the prior knowledge on digital communications, students develop further understanding on the challenges and opportunities brought by the wireless medium in designing current and future wireless communication systems and networks.  Topics include:    * Overview of digital wireless communications and cellular concept;   * Interference and traffic analysis for cellular networks;   * Wireless fading channel modelling and characterisation;   * Modulation and detection performance over fading channels;   * Equalisation techniques;   * Multi-carrier systems;   * Spread spectrum techniques;   * Receiver and transmitter diversity techniques;   * Information theory of wireless channels;   * Multiple antenna systems and space-time communications;   * Cooperative communications;   * Standards of wireless cellular networks (e.g. 2G, 3G, 4G, 5G and beyond).",
    "requisites": [
      "To enrol in this course you must be studying Master of Engineering. Incompatible with ENGN4536."
    ]
  }
]